Proj1 due Wed Sep 14

/////////////////////////

A pointer holds a memory address.


Declare:

type* name;


Initially: garbage value

/////////////////////////

Address-of operator, & (where have we seen?)

Gets the memory address of a variable



int x = 4;



How do we get the memory address of x?

/////////////////////////

Initializing a pointer:


int x = 4;
int* numPtr = &x;


--> what if we leave off the "&"


/////////////////////////

Dereferencing operator, *

Used on pointer variables.
Goes to the memory location held by the pointer.


int x = 4;
int* numPtr = &x;


*numPtr = 5;
(*numPtr)++;

int y = *numPtr;

/////////////////////////

Pointer arithmetic


int x = 4;
int* numPtr = &x;


//what does this do?
numPtr++;

//what about this?
numPtr-=5;

//what about this?
numPtr = &x - 1;


//this is very wrong. but what would it do?
numPtr = *x - 1;

/////////////////////////

Pointers and arrays.


int nums[10];


What is nums?


int* arrPtr = &nums[0];     //what does this do?

arrPtr = nums;              //how about this?

arrPtr = &nums[1];          //this?

arrPtr = nums + 4;          //this?


*arrPtr = 7;                //this?

*(nums + 2) = 10;           //this?

arrPtr++;                   //this?

nums++;                     //this?

/////////////////////////

Call by reference

- can pass memory addresses (pointers) to functions
- will let that function change what is at that spot in memory

--> see first attempt at swap function

--> why doesn't it work?

--> second attempt: pass pointers

/////////////////////////

Write a printarray function using pointer notation

Swap two array values

print results

/////////////////////////

Python tutor website with printarray/swap

/////////////////////////

Lab: user pointer notation to find the min element in an array
and add 100 to it

In your helper function, you should ONLY declare int* variables (no ints)