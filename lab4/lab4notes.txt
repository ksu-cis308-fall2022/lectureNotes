Can turn in project 1 by midnight tonight for
10% late penalty

/////////////////////////

A pointer is a variable that holds a 
memory address.


Declare:

type* name;


Initially: garbage value

/////////////////////////

Address-of operator, & (where have we seen?)

Gets the memory address of a variable



int x = 4;


How do we get the memory address of x?

&x


/////////////////////////

Initializing a pointer:


int x = 4;
int* numPtr = &x;



--> what if we leave off the "&"?





/////////////////////////

Dereferencing operator, *

Used on pointer variables.
Goes to the memory location held by the pointer.


int x = 4;
int* numPtr = &x;


*numPtr = 5;
(*numPtr)++;


/////////////////////////

Pointer arithmetic


int x = 4;
int* numPtr = &x;



//What does each line do?

numPtr++;

numPtr-=5;

numPtr = &x - 1;

//the next lines are bad!

int x = 4;
int* numPtr = &x;

numPtr = *x - 1; 

numPtr = x; 

*numPtr = 10; 

/////////////////////////

Pointers and arrays.

an array is a constant pointer to the 
first element in that array


int nums[10];


What is nums?


int* arrPtr = &nums[0];     //what does this do?
or: int* arrPtr = nums;

arrPtr = &nums;              //this?

arrPtr = &nums[1];          //this?

arrPtr = nums + 4;          //this?
//equivalent? arrPtr = &(nums[4]);

*arrPtr = 7;                //this?

*(nums + 2) = 10;           //this?
//equivalent? nums[2] = 10;

arrPtr++;                   //this?

nums++;                     //this?
    //error! nums is a constant pointer

/////////////////////////

Call by reference

- can pass memory addresses (pointers) to 
    functions

- will let that function change what is 
    at that spot in memory

--> see first attempt at swap function

--> why doesn't it work?

--> second attempt: pass pointers

/////////////////////////

Write a printarray function using pointer 
    notation

Swap two array values

print results

/////////////////////////

Python tutor website with printarray/swap

/////////////////////////

Lab: user pointer notation to find the 
min element in an array and add 100 to it

In your helper function, you should 
ONLY declare int* variables (no ints)