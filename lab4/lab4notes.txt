Proj1 due Wed Sep 14

/////////////////////////

A pointer is a variable that holds a 
memory address.


Declare:

type* name;


Initially: garbage value

/////////////////////////

Address-of operator, & (where have we seen?)

Gets the memory address of a variable



int x = 4;

&x

How do we get the memory address of x?

/////////////////////////

Initializing a pointer:


int x = 4;
int* numPtr = &x;



--> what if we leave off the "&"?





/////////////////////////

Dereferencing operator, *

Used on pointer variables.
Goes to the memory location held by the pointer.


int x = 4;
int* numPtr = &x;


*numPtr = 5;
(*numPtr)++;

int y = *numPtr;

/////////////////////////

Pointer arithmetic


int x = 4;
int* numPtr = &x;



//What does each line do?

numPtr++;

numPtr-=5;

numPtr = &x - 1;

//the next lines are bad!

numPtr = *x - 1; //get the value of memory 
                //location 4 and subtract 1

numPtr = x; //numPtr holds a 4 like it's
            //a memory address

*numPtr = 10; //put a 10 at memory location 4

/////////////////////////

Pointers and arrays.

an array is a constant pointer to the 
first element in that array


int nums[10];


What is nums?


int* arrPtr = &nums[0];     //what does this do?

arrPtr = nums;              //exactly the same

arrPtr = &nums[1];          //this?

arrPtr = nums + 4;          //this?
//equiv: arrPtr = &nums[4];

*arrPtr = 7;                //this?

*(nums + 2) = 10;           //this?
//equiv: nums[2] = 10;

arrPtr++;                   //this?

nums++;                     //this?
//NO! nums is a constant pointer

/////////////////////////

Call by reference

- can pass memory addresses (pointers) to 
    functions

- will let that function change what is 
    at that spot in memory

--> see first attempt at swap function

--> why doesn't it work?

--> second attempt: pass pointers

/////////////////////////

Write a printarray function using pointer 
    notation

Swap two array values

print results

/////////////////////////

Python tutor website with printarray/swap

/////////////////////////

Lab: user pointer notation to find the 
min element in an array and add 100 to it

In your helper function, you should 
ONLY declare int* variables (no ints)